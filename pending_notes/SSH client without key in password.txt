


http://tpesw1/trac/tpesw/wiki/SWTutorial/ssh

SSH client without key in password
ubuntu16.04 使用 rsa.（tpesw1使用rsa , tpesw2是dsa)


在 server 建立一支 private key, 一支 public key 對應到 loacl
這樣 scp 到 loacl 時就都不用打密碼

同理可反相建立，在loacl 建立一支 private key



asli@tpesw1:~/work/proj/lynx_mp_openwrt/camelot$ ssh-keygen -t rsa
一直enter
Generating public/private rsa key pair.
Enter file in which to save the key (/home/asli/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/asli/.ssh/id_rsa.
Your public key has been saved in /home/asli/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:RR7xM6/lxcSz8H74m3AZpp13j9nqBe3fO8PuFC8t7VY asli@tpesw1
The key's randomart image is:
+---[RSA 2048]----+
|          +.     |
|         o o   . |
|          o +. .o|
|         .   +o+o|
|        S     +*+|
|             +=BE|
|            .o*B@|
|              +&X|
|             .BO%|
+----[SHA256]-----+

asli@tpesw1:~/work/proj/lynx_mp_openwrt/camelot$ ssh-copy-id -i ~/.ssh/id_rsa.pub aston@192.168.65.97
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/asli/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed
/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys
aston@192.168.65.97's password:  (打 loacl 密碼）

Number of key(s) added: 1

Now try logging into the machine, with:   "ssh 'aston@192.168.65.97'"
and check to make sure that only the key(s) you wanted were added.


or
dsa

Method 2. Using ssh-copy-id command

On Client: create the private/public key-pair.
   ssh-keygen -t dsa =====> use "null" password if you like
File id_dsa and id_dsa.pub will be created inside $HOME/.ssh
Copy the id_dsa.pub to the server's .ssh directory
   ssh-copy-id -i ~/.ssh/id_dsa.pub servername
You can try ssh to the server from the client and no password will be needed
   ssh user@server







ssh-keygen -R tpesw1

-R hostname
Removes all keys belonging to hostname from a known_hosts file.  This option is useful to delete hashed hosts (see the -H option above).






